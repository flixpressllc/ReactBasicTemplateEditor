@import 'base-includes';

.ReactModalPortal {
  display: none;
}

#editor, #editor *  {
  box-sizing: border-box;
  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

#editor, .ReactModalPortal {
  font-size: $base-font-size;
  line-height: $line-height;
  padding: $viewportPad;
  padding-top: iH($xs-image);
  overflow-x: hidden;
  
  @include breakpoint($sm) {
    padding-top: iH($sm-image);
  }
  
  @include breakpoint($md) {
    padding-top: ($md-title-font-size * $line-height) + ($medPad * 2);
  }
  
  .component {
    h1, h2, h3, h4, h5, h6 {
      margin: $bigPad auto;
      padding: $medPad 0 ;
      background-color: #bbb;
      text-align: center;
      @include fw-bars;
    }
  }
  
  .editor-title {
    position: fixed;
    color: #fff;
    display: flex;
    flex-direction: column;
    justify-content: center;
    top: 0;
    left: 0;
    right: 0;
    padding: $medPad;
    padding-right: iW($xs-image) + 8;
    min-height: iH($xs-image);
    background-color: $flixpress-blue;
    z-index: 1;
    
    @include breakpoint($sm) {
      font-size: $sm-title-font-size;
      font-weight: bold;
      padding-right: iW($sm-image) + 8;
      min-height: iH($sm-image);
    }
    
    @include breakpoint($md) {
      min-height: 0;
      padding-right: $medPad;
    }
  }
  
  button, input[type="submit"] {
    @extend %button;
  }
  
  input[type="submit"] {
    background-color: $flixpress-red;
    
    &:hover {
      background-color: darken($flixpress-red, 10);
    }
  }
  
  input[type="text"], select {
    vertical-align: text-bottom;
  }
  
  label {
    margin-right: 1em;
  }
  
  @include breakpoint($md) {
    .main-interaction-area {
      position: relative;
      max-width: 850px;
      margin-left: auto;
      margin-right: auto;
      @include pie-clearfix;
    }
  
    h3:before, h3:after {
      display: none;
    }
    
    .column {
      width: 50%;
      float: left;
      
      &:first-child {
        padding-right: $viewportPad / 2;
      }
      
      &:last-child {
        padding-left: $viewportPad / 2;
        // Make room for image
        margin-top: $bigPad * 2 + iH($md-image);
      }
    }
  }
}

.component.you-tube-link {
  &.valid input {
    border-color: green !important;
  }
  &.invalid input {
    border-color: red !important;
  }
}

.sound-picker-component, .resolution-picker-component, .submit-render-component {
  margin: 1em auto;
  text-align: center;
}
.submit-render-component {
  background-color: #ddd;
  border: $medPad solid $bg-color;
  padding: $medPad;
  
  #Submit_BT {
    width: 10em;
  }
}

.user-messages {
  margin-left: 0 - $viewportPad;
  margin-right: 0 - $viewportPad;
  
  .user-message.bad {
    font-size: 0.85em;
  }
}

code {
  font-family: monospace;
  background-color: rgba(0,0,0,0.3);
  padding: $button-padding;
  border-radius: $fluid-radius;
}

.ReactModalPortal {
  .overlay {
    position: fixed;
    @include sides(0);
    background-color: rgba(255, 255, 255, 0.75);
    z-index: 100;
  }
  
  .modal {
    position: absolute;
    @include sides(0);
    background: $bg-color;
    overflow-y: auto;
    overflow-x: hidden;
    -webkit-overflow-scrolling: touch;
    outline: none;
    padding: $medPad;
    z-index: 101;
    box-shadow: 0 0 24px #555;
    
    @include breakpoint($md) {
      position: fixed;
      @include sides($bigPad * 2);
    }
  }
  
  .confirm-modal {
    box-shadow: 0 0 24px #000;
    
    .buttons {
      text-align: center;
      
      button {
        margin: ($bigPad * 2) $medPad;
      }
    }
    
    @include breakpoint($sm) {
      @include sides($bigPad);
    }
    
    @include breakpoint($md) {
      @include sides($bigPad * 4);
      padding: $bigPad * 4;
    }
  }
  
  .confirm-modal-overlay {
    background-color: rgba(0,0,0,0.5);
  }
  
  .sound-picker-modal {
    .ReactTabs .ReactTabs .ReactTabs__TabList {
      margin-top: $bigPad;
      margin-bottom: $bigPad;
    }
    
    .cancel {
      float: right;
      padding: $button-padding;
    }
    
    .react-tabs .react-tabs {
      padding-top: 0;
    }
    
    .picker-header {
      border: 1px solid $flixpress-blue;
      display: inline-block;
      border-radius: $fluid-radius;
      overflow: hidden;
      margin-bottom: $medPad;
      
      li {
        margin: 0;
        border-radius: 0;
        border: none;
      }
    }
  }
}
body.ReactModal__Body--open {
  overflow: hidden;
  
  .ReactModalPortal {
    display: block;
  }
}

.ReactTabs {
  .ReactTabs__Tab {
    border: 1px solid $flixpress-blue;
    background-color: transparent;
    display: inline-block;
    margin: $tinyPad;
    padding: $button-padding;
    border-radius: $fluid-radius;
    cursor: pointer;
    color: $flixpress-blue;
    
    &.ReactTabs__Tab--selected, &:hover {
      background-color: $flixpress-blue;
      color: white;
    }
  }
    
  h2 {
    @include fw-bars;
  }
}

.explain {
  color: #888;
  font-size: 0.9em;
}

.song-item {
  padding: $tinyPad;
  margin: $tinyPad auto;
  overflow: hidden;
  background-color: #333;
  color: white;
  font-size: $base-font-size * 0.875;
  
  .song-name {
    margin-left: 1em;
    display: block;
    float: left;
  }
  
  button {
    font-size: $base-font-size * 0.875;
    padding: $button-padding;
    margin: 0 $tinyPad 0 0;
    width: 4.6em;
    float: left;
  }
  
  &.playing {
    button.play-toggle {
      background-color: $flixpress-red;
    }
  }
  
  @include breakpoint($sm) {
    width: 49%;
    margin: $tinyPad 0.5%;
    float: left;
    text-align: center;
    padding: $medPad;
    
    .song-name, button {
      float: none;
    }
    
    .song-name {
      margin: $medPad 0 0 0;
    }
  }
}

.group, .clearfix {
  @include pie-clearfix;
}
